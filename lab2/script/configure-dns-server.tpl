#!/bin/bash
# DNS Server Configuration Script
# Generated by Terraform

set -e

# Variables from Terraform
AZURE_DNS_ENDPOINT="${azure_dns_endpoint}"
SPOKE_SERVER_A="${spoke_server_a}"
SPOKE_SERVER_B="${spoke_server_b}"
LOCAL_DOMAIN="${local_domain}"
AZURE_DOMAIN="${azure_domain}"
HUB_BASE_ADDR="${hub_base_address_space}"
SPOKE_BASE_ADDR="${spoke_base_address_space}"

echo "Configuring DNS server with:"
echo "  Azure DNS Endpoint: $AZURE_DNS_ENDPOINT"
echo "  Local Domain: $LOCAL_DOMAIN"
echo "  Azure Domain: $AZURE_DOMAIN"

# Log everything
exec > >(tee /var/log/cloud-init-custom.log)
exec 2>&1

echo "Starting DNS server configuration at $(date)"

# Function to check if command succeeded
check_status() {
    if [ $? -eq 0 ]; then
        echo "✓ $1 succeeded"
    else
        echo "✗ $1 failed"
        exit 1
    fi
}

# Update system
echo "Updating system packages..."
apt-get update && apt-get upgrade -y
check_status "System update"

# Install BIND9
echo "Installing BIND9..."
DEBIAN_FRONTEND=noninteractive apt-get install -y bind9 bind9utils bind9-doc dnsutils
check_status "BIND9 installation"

# Backup original configuration
cp /etc/bind/named.conf.options /etc/bind/named.conf.options.backup
cp /etc/bind/named.conf.local /etc/bind/named.conf.local.backup

# Configure BIND options
cat > /etc/bind/named.conf.options << EOF
options {
    directory "/var/cache/bind";
    
    // Listen on all interfaces
    listen-on { any; };
    listen-on-v6 { any; };
    
    // Allow queries from local networks
    allow-query { 
        localhost; 
        $${SPOKE_BASE_ADDR}; 
        $${HUB_BASE_ADDR}; 
    };
    
    // Forwarders for internet queries
    forwarders {
        168.63.129.16;  // Azure DNS
        8.8.8.8;        // Google DNS
        8.8.4.4;        // Google DNS
    };
    
    // Enable recursion
    recursion yes;
    
    // DNSSEC validation
    dnssec-validation auto;
    
    // Disable version disclosure
    version none;
    
    // Enable query logging (for troubleshooting)
    querylog yes;
};

// Enable logging
logging {
    channel bind_log {
        file "/var/log/bind/bind.log";
        severity info;
        print-time yes;
        print-category yes;
        print-severity yes;
    };
    category default { bind_log; };
    category queries { bind_log; };
};
EOF

cat > /etc/bind/named.conf.local << EOF
// Forward zone for Azure private DNS
zone "$${AZURE_DOMAIN}" {
    type forward;
    forward only;
    forwarders { $${AZURE_DNS_ENDPOINT}; };
};

// Local authoritative zone
zone "$${LOCAL_DOMAIN}" {
    type master;
    file "/etc/bind/zones/$${LOCAL_DOMAIN}";
    allow-transfer { $${SPOKE_SERVER_B}; }; // Allow Server B to do zone transfers
    also-notify { $${SPOKE_SERVER_B}; };    // Notify Server B of changes
};

// Reverse zone for local network
zone "0.168.192.in-addr.arpa" {
    type master;
    file "/etc/bind/zones/192.168.0.rev";
};
EOF

# Create zones directory
mkdir -p /etc/bind/zones
mkdir -p /var/log/bind

# Calculate last octets for reverse DNS
SPOKE_SERVER_A_LAST_OCTET=$${SPOKE_SERVER_A##*.}
SPOKE_SERVER_B_LAST_OCTET=$${SPOKE_SERVER_B##*.}

# echo "Server A last octet: $SPOKE_SERVER_A_LAST_OCTET"
# echo "Server B last octet: $SPOKE_SERVER_B_LAST_OCTET"

# Create forward zone file
cat > /etc/bind/zones/$${LOCAL_DOMAIN} << EOF
$TTL    86400
@       IN      SOA     server-a.$${LOCAL_DOMAIN}. admin.$${LOCAL_DOMAIN}. (
                              2024031501 ; Serial (YYYYMMDDNN)
                         3600           ; Refresh (1 hour)
                         1800           ; Retry (30 minutes)
                         1209600        ; Expire (2 weeks)
                         86400 )        ; Minimum TTL (1 day)

; Name servers
@       IN      NS      server-a.$${LOCAL_DOMAIN}.

; A records
server-a        IN      A       $${SPOKE_SERVER_A}
server-b        IN      A       $${SPOKE_SERVER_B}
dns             IN      A       $${SPOKE_SERVER_A}


; CNAME records
www             IN      CNAME   server-b

EOF

# Create reverse zone file
cat > /etc/bind/zones/192.168.0.rev << EOF
$TTL    86400
@       IN      SOA     server-a.$${LOCAL_DOMAIN}. admin.$${LOCAL_DOMAIN}. (
                              2024031501 ; Serial
                         3600           ; Refresh
                         1800           ; Retry
                         1209600        ; Expire
                         86400 )        ; Minimum TTL

; Name servers
@       IN      NS      server-a.$${LOCAL_DOMAIN}.

; PTR records
$${SPOKE_SERVER_A_LAST_OCTET}     IN      PTR     server-a.$${LOCAL_DOMAIN}.
$${SPOKE_SERVER_B_LAST_OCTET}      IN      PTR     server-b.$${LOCAL_DOMAIN}.

EOF

# Set proper ownership and permissions
chown -R bind:bind /etc/bind/zones
chown -R bind:bind /var/log/bind
chmod 755 /etc/bind/zones
chmod 644 /etc/bind/zones/*
chmod 755 /var/log/bind

# Test configuration files
echo "Testing BIND configuration..."
named-checkconf
check_status "BIND configuration check"

named-checkzone $${LOCAL_DOMAIN} /etc/bind/zones/$${LOCAL_DOMAIN}
check_status "Forward zone check"

named-checkzone 0.168.192.in-addr.arpa /etc/bind/zones/192.168.0.rev
check_status "Reverse zone check"

# Enable and start BIND9
systemctl enable bind9
systemctl restart bind9
check_status "BIND9 service restart"

# Wait for service to be ready
sleep 5

# Configure system to use local DNS
echo "Configuring system DNS..."
cat > /etc/systemd/resolved.conf << EOF
[Resolve]
DNS=127.0.0.1
Domains=$${LOCAL_DOMAIN}
FallbackDNS=168.63.129.16 8.8.8.8
DNSSEC=yes
Cache=yes
EOF

# Restart systemd-resolved
systemctl restart systemd-resolved
check_status "systemd-resolved restart"

# Install additional useful tools
echo "Installing additional tools..."
apt-get install -y htop curl wget net-tools tcpdump wireshark-common
check_status "Additional tools installation"

# Create DNS testing script
cat > /home/adminuser/test-dns.sh << EOF
#!/bin/bash
echo "=== DNS Server Testing Script ==="
echo "Server: $(hostname)"
echo "Time: $(date)"
echo ""

echo "1. Testing server a local zone resolution:"
nslookup server-a.$${LOCAL_DOMAIN} 127.0.0.1
echo ""

echo "2. Testing server b local zone resolution:"
nslookup server-b.$${LOCAL_DOMAIN} 127.0.0.1
echo ""

echo "2. Testing Azure private zone forwarding:"
nslookup app.$${AZURE_DOMAIN} 127.0.0.1
echo ""

echo "3. Testing internet resolution:"
nslookup google.com 127.0.0.1
echo ""

echo "4. Testing reverse resolution:"
nslookup 192.168.0.132 127.0.0.1
echo ""

echo "5. BIND9 service status:"
systemctl status bind9 --no-pager
echo ""

echo "6. DNS statistics:"
rndc stats
if [ -f /var/cache/bind/named.stats ]; then
    echo "Last 10 queries:"
    tail -10 /var/cache/bind/named.stats
fi
EOF

chmod +x /home/adminuser/test-dns.sh
chown adminuser:adminuser /home/adminuser/test-dns.sh

echo "DNS server configuration completed successfully!"
echo "Check /var/log/dns-setup-status.txt for summary"
echo "Run /home/adminuser/test-dns.sh to test DNS functionality"